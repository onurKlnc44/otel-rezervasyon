// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projeodev.Models;

#nullable disable

namespace projeodev.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250112115331_Picture")]
    partial class Picture
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projeodev.Models.Detay", b =>
                {
                    b.Property<int>("MyProperty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MyProperty"));

                    b.Property<string>("Acıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Günlükfiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Yıldız")
                        .HasColumnType("int");

                    b.HasKey("MyProperty");

                    b.ToTable("Detay");
                });

            modelBuilder.Entity("projeodev.Models.Kullanıcı", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kullanıcı");
                });

            modelBuilder.Entity("projeodev.Models.Oda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DetayID")
                        .HasColumnType("int");

                    b.Property<string>("Odaismi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DetayID");

                    b.ToTable("Oda");
                });

            modelBuilder.Entity("projeodev.Models.Resimler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("OdaId")
                        .HasColumnType("int");

                    b.Property<string>("Resimyolu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("OdaId");

                    b.ToTable("Resimler");
                });

            modelBuilder.Entity("projeodev.Models.Rezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BaslangıcTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullanıcıId")
                        .HasColumnType("int");

                    b.Property<int?>("OdaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullanıcıId");

                    b.HasIndex("OdaID");

                    b.ToTable("Rezervarsyon");
                });

            modelBuilder.Entity("projeodev.Models.Oda", b =>
                {
                    b.HasOne("projeodev.Models.Detay", "Detay")
                        .WithMany("odas")
                        .HasForeignKey("DetayID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Detay");
                });

            modelBuilder.Entity("projeodev.Models.Resimler", b =>
                {
                    b.HasOne("projeodev.Models.Oda", "oda")
                        .WithMany("resimlers")
                        .HasForeignKey("OdaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("oda");
                });

            modelBuilder.Entity("projeodev.Models.Rezervasyon", b =>
                {
                    b.HasOne("projeodev.Models.Kullanıcı", "kullanıcı")
                        .WithMany("rezervasyons")
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("projeodev.Models.Oda", "oda")
                        .WithMany("Rezervasyons")
                        .HasForeignKey("OdaID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("kullanıcı");

                    b.Navigation("oda");
                });

            modelBuilder.Entity("projeodev.Models.Detay", b =>
                {
                    b.Navigation("odas");
                });

            modelBuilder.Entity("projeodev.Models.Kullanıcı", b =>
                {
                    b.Navigation("rezervasyons");
                });

            modelBuilder.Entity("projeodev.Models.Oda", b =>
                {
                    b.Navigation("Rezervasyons");

                    b.Navigation("resimlers");
                });
#pragma warning restore 612, 618
        }
    }
}
